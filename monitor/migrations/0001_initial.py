# Generated by Django 3.2.4 on 2023-11-27 04:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import monitor.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('public', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRoute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='路由名称')),
                ('group_by', models.TextField(default='["_product_id", "alertname", "level"]', verbose_name='通过...')),
                ('group_wait', models.IntegerField(default=60, verbose_name='通过...等待')),
                ('group_interval', models.IntegerField(default=60, verbose_name='通过...间隔')),
                ('repeat_interval', models.IntegerField(default=3600, verbose_name='重复...间隔')),
                ('match_re', models.BooleanField(default=False, verbose_name='路由正则')),
                ('match', models.TextField(default='[]', verbose_name='精确匹配')),
                ('is_raise', models.IntegerField(default=0, verbose_name='是否继续')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '告警路由',
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='告警规则名称')),
                ('interval', models.IntegerField(default=180, verbose_name='持续时间')),
                ('expression', models.TextField(default='', verbose_name='promql 表达式')),
                ('record', models.TextField(blank=True, default='', verbose_name='记录规则')),
                ('op', models.CharField(default='', max_length=255, verbose_name='操作符')),
                ('value', models.IntegerField(default=0, verbose_name='阈值')),
                ('mode', models.IntegerField(default=0, verbose_name='模式')),
                ('summary', models.TextField(blank=True, default='', verbose_name='告警消息')),
                ('description', models.TextField(blank=True, default='', verbose_name='告警描述')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name_plural': '告警规则',
            },
        ),
        migrations.CreateModel(
            name='AlertRuleLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='别名')),
            ],
            options={
                'verbose_name_plural': '规则等级',
            },
        ),
        migrations.CreateModel(
            name='AlertRuleType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='别名')),
            ],
            options={
                'verbose_name_plural': '规则类型',
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('endpoint', models.CharField(max_length=255, unique=True, verbose_name='Endpoint')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=50, verbose_name='超时时间')),
                ('monitor_port', models.IntegerField(default=2021, verbose_name='监控端口')),
                ('private_ip', models.CharField(max_length=255, verbose_name='内网IP')),
                ('public_ip', models.CharField(max_length=255, null=True, verbose_name='外网IP')),
                ('use_public_ip', models.BooleanField(default=False, verbose_name='是否使用外网IP')),
                ('enable', models.BooleanField(default=True, verbose_name='是否监控')),
            ],
            options={
                'verbose_name_plural': '监控对象',
            },
        ),
        migrations.CreateModel(
            name='InstanceType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='别名')),
            ],
            options={
                'verbose_name_plural': '对象类型',
            },
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='节点名称')),
                ('desc', models.TextField(default='', verbose_name='描述')),
                ('api', models.CharField(default='', max_length=255, verbose_name='对外API地址')),
                ('ipaddr', models.CharField(default='', max_length=255, verbose_name='IP地址')),
                ('uuid', models.CharField(blank=True, max_length=255, verbose_name='唯一ID')),
                ('mode', models.CharField(default='http', max_length=255, verbose_name='探测模式')),
            ],
            options={
                'verbose_name_plural': '探测节点',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='节点名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='')),
                ('code', models.CharField(max_length=255, verbose_name='唯一标识')),
                ('uuid', models.CharField(max_length=255, verbose_name='唯一ID')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
                ('port', models.IntegerField(default=9090, verbose_name='监听端口')),
                ('alertmanager', models.CharField(max_length=255, null=True, verbose_name='Alertmanager地址')),
                ('unit', models.CharField(default='d', max_length=255, verbose_name='存储时间单位')),
                ('retention_time', models.IntegerField(default=15, verbose_name='存储时间')),
                ('retention_size', models.IntegerField(default=512, verbose_name='存储块大小')),
                ('query_timeout', models.IntegerField(default=2, verbose_name='查询超时')),
                ('query_concurrency', models.IntegerField(default=20, verbose_name='查询并发')),
            ],
            options={
                'verbose_name_plural': '采集节点',
            },
        ),
        migrations.CreateModel(
            name='TaskMode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='描述')),
                ('args', models.CharField(max_length=255, null=True, verbose_name='任务默认参数')),
            ],
            options={
                'verbose_name_plural': '任务模式',
            },
        ),
        migrations.CreateModel(
            name='Tmpl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('mode', models.IntegerField(choices=[(0, '通知模版'), (1, 'Prom模板'), (2, 'Alert模板'), (3, '实例模板')], default=0, verbose_name='类型')),
                ('content', models.TextField(verbose_name='内容')),
            ],
            options={
                'verbose_name_plural': '模板文件',
            },
        ),
        migrations.CreateModel(
            name='TargetTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('refresh', models.IntegerField(default=300, verbose_name='刷新时间')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=50, verbose_name='超时时间')),
                ('scheme', models.CharField(default='http', max_length=255, verbose_name='scheme')),
                ('match', models.TextField(default='{}', verbose_name='匹配规则')),
                ('labels', models.TextField(default='[]', verbose_name='过滤标签')),
                ('port', models.IntegerField(default=2021, verbose_name='端口')),
                ('args', models.TextField(default='', verbose_name='参数')),
                ('relabel', models.TextField(blank=True, default='', verbose_name='额外标签')),
                ('url', models.CharField(default='业务任务URL', max_length=255, verbose_name='URL')),
                ('instance_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.instancetype', verbose_name='实例类型')),
                ('instances', models.ManyToManyField(blank=True, to='monitor.Instance', verbose_name='实例列表')),
                ('mode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.taskmode', verbose_name='任务模式')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品')),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.server', verbose_name='采集点')),
            ],
            options={
                'verbose_name_plural': '基础任务',
            },
        ),
        migrations.CreateModel(
            name='Silence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('uuid', models.CharField(blank=True, max_length=255, null=True, verbose_name='维护ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='策略名称')),
                ('is_regex', models.IntegerField(default=0, verbose_name='是否正则')),
                ('match', models.TextField(null=True, verbose_name='匹配规则')),
                ('describe', models.TextField(default='', verbose_name='策略描述')),
                ('start', models.IntegerField(default=0, verbose_name='开始时间')),
                ('end', models.IntegerField(default=0, verbose_name='结束时间')),
                ('duration', models.IntegerField(default=0, verbose_name='耗时')),
                ('unit', models.CharField(default='s', max_length=255, verbose_name='时间单位')),
                ('state', models.IntegerField(default=1, verbose_name='状态')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='添加者')),
            ],
            options={
                'verbose_name_plural': '告警维护',
            },
        ),
        migrations.CreateModel(
            name='Receiver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='描述')),
                ('channel', models.CharField(default='feishu', max_length=255, verbose_name='通知渠道')),
                ('webhook', models.CharField(default='', max_length=255, verbose_name='webhook地址')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '告警接收',
            },
        ),
        migrations.CreateModel(
            name='ProbeTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('mode', models.CharField(default='http', max_length=36, verbose_name='探测类型')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=30, verbose_name='超时时间')),
                ('target', models.CharField(default='', max_length=255, verbose_name='目标')),
                ('labels', models.TextField(blank=True, default='[]', verbose_name='标签')),
                ('probe', models.ManyToManyField(to='monitor.Probe', verbose_name='探测节点')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '探测任务',
            },
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('value', models.CharField(max_length=255, verbose_name='值')),
                ('mode', models.IntegerField(default=0, verbose_name='类型')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '对象标签',
            },
        ),
        migrations.AddField(
            model_name='instance',
            name='instance_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.instancetype', verbose_name='实例类型'),
        ),
        migrations.AddField(
            model_name='instance',
            name='labels',
            field=models.ManyToManyField(blank=True, related_name='ins_labels', to='monitor.Labels', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='instance',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品'),
        ),
        migrations.AddField(
            model_name='instance',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.server', verbose_name='采集点'),
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='描述')),
                ('addr', models.CharField(max_length=255, verbose_name='地址')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '告警大盘',
            },
        ),
        migrations.CreateModel(
            name='CurrentAlert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('job', models.CharField(max_length=255, verbose_name='监控任务')),
                ('name', models.CharField(max_length=255, verbose_name='告警名称')),
                ('fingerprint', models.CharField(max_length=255, verbose_name='指纹')),
                ('instance_type', models.CharField(max_length=255, verbose_name='实例类型')),
                ('instance_name', models.CharField(max_length=255, verbose_name='实例名称')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
                ('endpoint', models.CharField(max_length=255, verbose_name='Endpoint')),
                ('level', models.CharField(max_length=36, verbose_name='级别')),
                ('state', models.CharField(max_length=36, verbose_name='状态')),
                ('receivers', models.CharField(max_length=255, verbose_name='接收人')),
                ('labels', models.TextField(verbose_name='标签')),
                ('summary', models.TextField(verbose_name='概括')),
                ('description', models.TextField(null=True, verbose_name='描述')),
                ('start', models.IntegerField(verbose_name='开始时间')),
                ('update', models.IntegerField(verbose_name='更新时间')),
                ('value', models.FloatField(verbose_name='值')),
                ('deleted', models.IntegerField(default=0, verbose_name='是否删除')),
                ('deleted_ts', models.IntegerField(default=0, verbose_name='删除时间')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
            ],
            options={
                'verbose_name_plural': '当前告警',
            },
        ),
        migrations.CreateModel(
            name='Callback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('types', models.IntegerField(default=1, verbose_name='回调类型')),
                ('robot', models.CharField(max_length=255, verbose_name='机器人')),
                ('check_duration', models.IntegerField(default=60, verbose_name='检查周期')),
                ('silence_duration', models.IntegerField(default=600, verbose_name='静默周期')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.factory', verbose_name='关联云厂商')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='关联产品')),
            ],
            options={
                'verbose_name_plural': '告警回调',
            },
        ),
        migrations.CreateModel(
            name='BusinessTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='任务名称')),
                ('url', models.CharField(default='业务任务URL', max_length=255, verbose_name='URL')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=50, verbose_name='超时时间')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='产品')),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.server', verbose_name='采集点')),
            ],
            options={
                'verbose_name_plural': '业务任务',
            },
        ),
        migrations.CreateModel(
            name='AlertRuleChild',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='子规则名称')),
                ('interval', models.IntegerField(default=180, verbose_name='持续时间')),
                ('expression', models.TextField(default='', verbose_name='promql 表达式')),
                ('record', models.TextField(blank=True, default='', verbose_name='记录规则')),
                ('op', models.CharField(default='', max_length=255, verbose_name='操作符')),
                ('value', models.IntegerField(default=0, verbose_name='阈值')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_cover', models.BooleanField(default=False, verbose_name='是否覆盖父规则')),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.alertrule', verbose_name='父规则')),
                ('labels', models.ManyToManyField(blank=True, related_name='child_rule_labels', to='monitor.Labels', verbose_name='额外标签')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='添加者')),
            ],
            options={
                'verbose_name_plural': '告警子规则',
            },
        ),
        migrations.AddField(
            model_name='alertrule',
            name='alert_rule_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='monitor.alertrulelevel', verbose_name='规则等级'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='alert_rule_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='monitor.alertruletype', verbose_name='规则类型'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='labels',
            field=models.ManyToManyField(blank=True, related_name='alert_rule_labels', to='monitor.Labels', verbose_name='额外标签'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品'),
        ),
        migrations.AddField(
            model_name='alertrule',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='添加者'),
        ),
        migrations.CreateModel(
            name='AlertRouteChild',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='子路由名称')),
                ('group_wait', models.IntegerField(default=60, verbose_name='通过...等待')),
                ('group_interval', models.IntegerField(default=60, verbose_name='通过...间隔')),
                ('repeat_interval', models.IntegerField(default=3600, verbose_name='重复...间隔')),
                ('match_re', models.BooleanField(default=False, verbose_name='路由正则')),
                ('match', models.TextField(default='[]', verbose_name='精确匹配')),
                ('is_raise', models.IntegerField(default=0, verbose_name='是否继续')),
                ('enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('alert_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor.alertroute', verbose_name='父路由')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='public.product', verbose_name='产品')),
                ('receiver', models.ManyToManyField(related_name='child_route_receivers', to='monitor.Receiver', verbose_name='接收者')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='添加者')),
            ],
            options={
                'verbose_name_plural': '告警子路由',
            },
        ),
        migrations.AddField(
            model_name='alertroute',
            name='receiver',
            field=models.ManyToManyField(related_name='alert_route_receivers', to='monitor.Receiver', verbose_name='接收者'),
        ),
        migrations.AddField(
            model_name='alertroute',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='添加者'),
        ),
        migrations.CreateModel(
            name='AlertMsg',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=monitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='告警名称')),
                ('instance_type', models.CharField(max_length=255, verbose_name='实例类型')),
                ('instance_name', models.CharField(max_length=255, verbose_name='实例名称')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
                ('endpoint', models.CharField(max_length=255, verbose_name='endpoint')),
                ('level', models.CharField(max_length=255, verbose_name='级别')),
                ('state', models.CharField(max_length=255, verbose_name='状态')),
                ('graph', models.CharField(max_length=255, verbose_name='图')),
                ('summary', models.CharField(max_length=255, verbose_name='告警消息')),
                ('fingerprint', models.CharField(max_length=255, verbose_name='指纹')),
                ('end_at', models.IntegerField(default=0, verbose_name='结束时间')),
                ('start_at', models.IntegerField(default=1, verbose_name='开始时间')),
                ('receiver', models.CharField(max_length=255, verbose_name='接收人')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public.product', verbose_name='告警产品')),
            ],
            options={
                'verbose_name_plural': '告警消息',
            },
        ),
    ]
