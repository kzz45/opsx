# Generated by Django 3.2.4 on 2023-11-28 08:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dops.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('floor', models.CharField(max_length=255, null=True, verbose_name='楼层')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='域名名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='域名描述')),
                ('dns_server', models.CharField(blank=True, max_length=255, null=True, verbose_name='域名DNS服务器')),
                ('is_ssl', models.BooleanField(default=False, verbose_name='是否加载证书')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(default='阿里云', max_length=255, unique=True, verbose_name='厂商名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='厂商描述')),
                ('access_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ACCESS ID')),
                ('access_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='ACCESS KEY')),
                ('rolearn', models.CharField(blank=True, max_length=255, null=True, verbose_name='RoleARN')),
                ('kms_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='kms')),
            ],
            options={
                'verbose_name_plural': '厂商',
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='机型名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='机型描述')),
                ('flavor_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='原始机型')),
                ('cpu', models.IntegerField(blank=True, default=0, verbose_name='CPU')),
                ('mem', models.IntegerField(blank=True, default=0, verbose_name='内存')),
                ('disk', models.IntegerField(blank=True, default=0, verbose_name='磁盘')),
                ('price', models.IntegerField(blank=True, default=0, null=True, verbose_name='价格')),
                ('factory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
            ],
            options={
                'verbose_name_plural': '机型配置',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='分组名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='分组描述')),
            ],
            options={
                'verbose_name_plural': '分组信息',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='描述')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Park',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='园区名称')),
                ('building', models.CharField(max_length=255, null=True, verbose_name='楼栋')),
                ('floor', models.CharField(max_length=255, null=True, verbose_name='楼层')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='产品名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='产品描述')),
                ('external_id', models.CharField(max_length=255, null=True, verbose_name='产品id')),
            ],
            options={
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='项目名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='项目描述')),
                ('project_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='gcp_project_id')),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_admin_user', to=settings.AUTH_USER_MODEL, verbose_name='项目负责人')),
                ('ops_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='project_ops_user', to=settings.AUTH_USER_MODEL, verbose_name='运维负责人')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='关联产品')),
            ],
            options={
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('region_id', models.CharField(default='', max_length=255, verbose_name='Region ID')),
                ('name', models.CharField(max_length=255, verbose_name='区域名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='区域描述')),
                ('factory', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='关联厂商')),
            ],
            options={
                'verbose_name_plural': '区域',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='用户组名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='用户组描述')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ugadmin', to=settings.AUTH_USER_MODEL, verbose_name='管理员')),
            ],
            options={
                'verbose_name_plural': '用户分组',
            },
        ),
        migrations.CreateModel(
            name='UserStandardRole',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='角色名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='角色描述')),
            ],
            options={
                'verbose_name_plural': '标准用户角色',
            },
        ),
        migrations.CreateModel(
            name='WhiteList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, verbose_name='描述')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('zone_id', models.CharField(default='', max_length=255, verbose_name='可用区ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='可用区名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='可用区描述')),
                ('zone_type', models.CharField(blank=True, choices=[('machine', 'machine'), ('redis', 'redis'), ('mysql', 'mysql')], max_length=255, null=True, verbose_name='可用区类型')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.region', verbose_name='关联的地域')),
            ],
            options={
                'verbose_name_plural': '可用区',
            },
        ),
        migrations.CreateModel(
            name='VPC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('vpc_id', models.CharField(default='', max_length=255, verbose_name='VPC ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='VPC名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='VPC描述')),
                ('cidr_block', models.CharField(blank=True, max_length=255, null=True, verbose_name='网段')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.region', verbose_name='关联的地域')),
            ],
            options={
                'verbose_name_plural': '网络',
            },
        ),
        migrations.CreateModel(
            name='UserRoleGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcmdb.usergroup', verbose_name='用户组')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcmdb.userstandardrole', verbose_name='角色')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='成员')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='标签名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='标签描述')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cmdb_tags', to='dcmdb.product', verbose_name='关联产品')),
            ],
            options={
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('subnet_id', models.CharField(default='', max_length=255, verbose_name='子网名称')),
                ('name', models.CharField(max_length=255, verbose_name='子网名称')),
                ('alias_name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='子网名称描述')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='子网描述')),
                ('cidr_block', models.CharField(blank=True, max_length=255, null=True, verbose_name='CIDR')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否默认')),
                ('available_ip_count', models.IntegerField(default=0, verbose_name='可用IP数量')),
                ('resource_auto_sync', models.IntegerField(default=0, verbose_name='自动同步资源标记')),
                ('vpc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.vpc', verbose_name='关联的VPC')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.zone', verbose_name='关联可用区')),
            ],
            options={
                'verbose_name_plural': '子网',
            },
        ),
        migrations.CreateModel(
            name='SLB',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('slb_id', models.CharField(max_length=512, verbose_name='负载均衡ID')),
                ('address', models.CharField(max_length=255, verbose_name='地址')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('status', models.CharField(blank=True, default='Active', max_length=255, null=True, verbose_name='状态')),
                ('network_type', models.CharField(max_length=255, verbose_name='网络类型')),
                ('gcp_project_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='gcp_project_id')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='管理产品')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='slb_list', to='dcmdb.project', verbose_name='项目')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.region', verbose_name='地域')),
                ('vpc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.vpc', verbose_name='关联的VPC')),
            ],
            options={
                'verbose_name_plural': '负载均衡',
            },
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('security_id', models.CharField(max_length=255, verbose_name='安全组ID')),
                ('name', models.CharField(max_length=255, verbose_name='安全组名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='安全组描述')),
                ('factory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='厂商')),
                ('vpc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcmdb.vpc', verbose_name='关联的VPC')),
            ],
            options={
                'verbose_name_plural': '安全组',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='安全组规则名称')),
                ('rule_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='安全组规则ID')),
                ('policy', models.CharField(max_length=255, null=True, verbose_name='安全组策略(允许/拒绝)')),
                ('direction', models.CharField(max_length=255, null=True, verbose_name='规则类型(出站/入站)')),
                ('protocol', models.CharField(max_length=255, null=True, verbose_name='协议')),
                ('priority', models.IntegerField(null=True, verbose_name='优先级')),
                ('ip', models.TextField(null=True, verbose_name='ip')),
                ('port', models.CharField(max_length=255, null=True, verbose_name='端口')),
                ('security', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.security', verbose_name='安全组')),
            ],
            options={
                'verbose_name_plural': '安全组规则',
            },
        ),
        migrations.CreateModel(
            name='Redis',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_name', models.CharField(max_length=255, null=True, verbose_name='外部名称')),
                ('external_uuid', models.CharField(max_length=255, unique=True, verbose_name='外部ID')),
                ('status', models.IntegerField(choices=[(0, '空闲中'), (1, '使用中'), (2, '已退还'), (3, '待退还')], default=0, verbose_name='状态')),
                ('available', models.BooleanField(default=False, verbose_name='是否可用')),
                ('types', models.IntegerField(choices=[(0, '集群版'), (1, '标准版')], default=0, verbose_name='redis类型')),
                ('conn', models.CharField(blank=True, max_length=255, verbose_name='连接地址')),
                ('port', models.IntegerField(blank=True, default=3306, verbose_name='连接端口')),
                ('private_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='内网地址')),
                ('public_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='外网地址')),
                ('capacity', models.IntegerField(default=0, verbose_name='容量')),
                ('qps', models.IntegerField(default=0, verbose_name='QPS')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='redis_list', to='dcmdb.project', verbose_name='项目')),
                ('subnet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.subnet', verbose_name='子网')),
                ('tags', models.ManyToManyField(blank=True, related_name='redis_tags', to='dcmdb.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name_plural': 'Redis',
            },
        ),
        migrations.AddField(
            model_name='project',
            name='subnet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.subnet', verbose_name='子网'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='product',
            name='user_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.usergroup', verbose_name='用户组'),
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('external_uuid', models.CharField(max_length=255, unique=True, verbose_name='外部ID')),
                ('external_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='状态')),
                ('local_status', models.IntegerField(choices=[(0, '空闲中'), (1, '使用中'), (2, '已退还'), (3, '待退还')], default=0, verbose_name='状态')),
                ('instance_type', models.IntegerField(default=0, verbose_name='类型')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.project', verbose_name='')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.region', verbose_name='')),
            ],
            options={
                'verbose_name_plural': 'other',
            },
        ),
        migrations.CreateModel(
            name='MySQL',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('external_uuid', models.CharField(max_length=255, unique=True, verbose_name='外部ID')),
                ('external_status', models.CharField(blank=True, max_length=255, null=True, verbose_name='状态')),
                ('local_status', models.IntegerField(choices=[(0, '空闲中'), (1, '使用中'), (2, '已退还'), (3, '待退还')], default=0, verbose_name='状态')),
                ('conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='连接地址')),
                ('port', models.IntegerField(default=3306, null=True, verbose_name='连接端口')),
                ('cpu', models.IntegerField(default=0, verbose_name='CPU')),
                ('mem', models.IntegerField(default=0, verbose_name='内存')),
                ('disk', models.IntegerField(default=0, verbose_name='磁盘')),
                ('iops', models.IntegerField(default=0, verbose_name='IOPS')),
                ('version', models.CharField(blank=True, max_length=255, null=True, verbose_name='版本')),
                ('flavor_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='机型')),
                ('create_time', models.DateTimeField(null=True, verbose_name='创建时间')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('project', models.ManyToManyField(blank=True, null=True, related_name='mysql_list', to='dcmdb.Project', verbose_name='项目')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.region', verbose_name='地区')),
                ('subnet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.subnet', verbose_name='子网')),
                ('tags', models.ManyToManyField(blank=True, related_name='mysql_tags', to='dcmdb.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name_plural': 'MySQL',
            },
        ),
        migrations.CreateModel(
            name='Mongodb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_name', models.CharField(max_length=255, null=True, verbose_name='外部名称')),
                ('external_uuid', models.CharField(max_length=255, unique=True, verbose_name='外部ID')),
                ('status', models.IntegerField(choices=[(0, '空闲中'), (1, '使用中'), (2, '已退还'), (3, '待退还')], default=0, verbose_name='状态')),
                ('db_type', models.CharField(default='replicate', max_length=255, verbose_name='实例类型')),
                ('replica_set_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='副本集名称')),
                ('disk', models.IntegerField(default=0, verbose_name='磁盘')),
                ('iops', models.IntegerField(default=0, verbose_name='IOPS')),
                ('connections', models.IntegerField(default=0, verbose_name='Connections')),
                ('version', models.CharField(blank=True, max_length=255, null=True, verbose_name='版本')),
                ('flavor_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='机型')),
                ('primary_conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='连接地址')),
                ('primary_port', models.IntegerField(default=3717, verbose_name='连接端口')),
                ('secondary_conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='连接地址')),
                ('secondary_port', models.IntegerField(default=3717, verbose_name='连接端口')),
                ('readonly_conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='连接地址')),
                ('readonly_port', models.IntegerField(default=3717, verbose_name='连接端口')),
                ('shard_conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='')),
                ('mongos_conn', models.CharField(blank=True, max_length=255, null=True, verbose_name='')),
                ('mongos_port', models.IntegerField(default=3717, verbose_name='')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mongodb_list', to='dcmdb.project', verbose_name='项目')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.region', verbose_name='所属地区')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_uuid', models.CharField(max_length=255, unique=True, verbose_name='外部ID')),
                ('external_name', models.CharField(max_length=255, null=True, verbose_name='名称')),
                ('external_hostname', models.CharField(blank=True, max_length=255, null=True, verbose_name='主机名')),
                ('external_status', models.CharField(max_length=255, null=True, verbose_name='状态')),
                ('external_flavor', models.CharField(max_length=255, null=True, verbose_name='机型')),
                ('cpu', models.IntegerField(default=0, verbose_name='CPU')),
                ('mem', models.IntegerField(default=0, verbose_name='内存')),
                ('os_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统名称')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='机器描述')),
                ('status', models.IntegerField(choices=[(0, '使用中'), (1, '停止'), (2, '已退还'), (3, '升降配完成')], default=0, verbose_name='机器状态')),
                ('public_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='外网IP')),
                ('private_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='内网IP')),
                ('subnet', models.CharField(blank=True, max_length=255, null=True, verbose_name='关联子网')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='修改时间')),
                ('gcp_project_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='gcp_project_id')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='厂商')),
                ('flavor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.flavor', verbose_name='机型')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='machine_group', to='dcmdb.group', verbose_name='产品分组')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='管理产品')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='machine_list', to='dcmdb.project', verbose_name='项目')),
                ('tags', models.ManyToManyField(blank=True, related_name='machine_tags', to='dcmdb.Tag', verbose_name='标签')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.zone', verbose_name='可用区')),
            ],
            options={
                'verbose_name_plural': '机器',
                'ordering': ['-update_time'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('external_id', models.CharField(max_length=255, verbose_name='镜像ID')),
                ('external_name', models.CharField(max_length=255, verbose_name='镜像名称')),
                ('external_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='镜像描述')),
                ('external_osname', models.CharField(blank=True, max_length=255, null=True, verbose_name='操作系统')),
                ('image_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='镜像类型')),
                ('local_desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='本地描述')),
                ('project_id', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='GCP project_id')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='厂商')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.region', verbose_name='地区')),
            ],
            options={
                'verbose_name_plural': '机器镜像',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('model', models.CharField(default='', max_length=255, verbose_name='模块')),
                ('action', models.CharField(max_length=255, verbose_name='动作')),
                ('content', models.TextField(default='[]', verbose_name='操作内容')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='group',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='group_list', to='dcmdb.product', verbose_name='所属产品'),
        ),
        migrations.CreateModel(
            name='ExportIP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('cidr', models.CharField(max_length=255, verbose_name='CIRD')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='描述')),
                ('used', models.BooleanField(default=True, verbose_name='是否使用')),
                ('release', models.BooleanField(default=False, verbose_name='是否释放')),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.building', verbose_name='')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.operator', verbose_name='运营商')),
                ('park', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='park', to='dcmdb.park', verbose_name='园区')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElasticIP',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='名称')),
                ('external_uuid', models.CharField(default='', max_length=255, unique=True, verbose_name='外部ID')),
                ('version', models.CharField(default='', max_length=255, verbose_name='版本')),
                ('state', models.CharField(default='', max_length=255, verbose_name='状态')),
                ('public_ip', models.CharField(max_length=255, verbose_name='弹性IP')),
                ('bind_type', models.CharField(max_length=255, null=True, verbose_name='关联资源类型')),
                ('bind_id', models.CharField(max_length=255, null=True, verbose_name='关联资源ID')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='关联云厂商')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DomainRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('rr', models.CharField(max_length=255, verbose_name='主机记录')),
                ('type', models.CharField(max_length=255, verbose_name='记录类型')),
                ('value', models.CharField(max_length=255, verbose_name='记录值')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='描述')),
                ('status', models.CharField(max_length=255, verbose_name='状态')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.domain', verbose_name='主域名')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DomainCert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dops.models.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dops.models.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='证书名称')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='证书描述')),
                ('cert_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='证书ID')),
                ('cert_file', models.TextField(blank=True, null=True, verbose_name='证书内容')),
                ('key_file', models.TextField(blank=True, null=True, verbose_name='证书私钥')),
                ('issure_by', models.CharField(max_length=255, verbose_name='提供商')),
                ('valid_to', models.CharField(max_length=255, verbose_name='到期时间')),
                ('factory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='厂商')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='domain',
            name='domain_cert',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.domaincert', verbose_name='关联的证书'),
        ),
        migrations.AddField(
            model_name='domain',
            name='factory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='厂商'),
        ),
        migrations.AddField(
            model_name='domain',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='domain_list', to='dcmdb.project', verbose_name='关联项目'),
        ),
        migrations.AddField(
            model_name='building',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='building_park', to='dcmdb.park', verbose_name='园区'),
        ),
    ]
