# Generated by Django 3.2.4 on 2023-11-28 08:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import dmonitor.models.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dcmdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertLevel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.CharField(max_length=255, verbose_name='描述')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertRuleType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='规则类型')),
                ('desc', models.CharField(max_length=255, null=True, verbose_name='规则类型描述')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='实例名称(hostname)')),
                ('endpoint', models.CharField(max_length=255, unique=True, verbose_name='endpoint(机器唯一ID)')),
                ('private_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='内网IP地址')),
                ('public_ip', models.CharField(blank=True, max_length=255, null=True, verbose_name='外网IP地址')),
                ('use_public_ip', models.IntegerField(default=0, verbose_name='是否通过外网IP监控')),
                ('enable', models.IntegerField(default=1, verbose_name='是否禁止')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstanceType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='实例类型名称')),
                ('value', models.CharField(max_length=255, null=True, verbose_name='实体类型')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='标签名称')),
                ('value', models.CharField(max_length=255, null=True, verbose_name='标签值')),
                ('mode', models.IntegerField(default=0, verbose_name='标签类型')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='探测名称')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('api', models.CharField(max_length=255, verbose_name='对外API地址')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
                ('uuid', models.CharField(blank=True, max_length=255, verbose_name='唯一ID')),
                ('mode', models.CharField(max_length=255, verbose_name='探测模式')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServerGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('mode', models.IntegerField(default=0, verbose_name='分组模式')),
                ('policy', models.TextField(default=None, null=True, verbose_name='分组策略')),
                ('labels', models.ManyToManyField(blank=True, related_name='sg_lables', to='dmonitor.Label', verbose_name='分组上的标签')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='用户组名称')),
                ('channel', models.CharField(default='wechat', max_length=255, verbose_name='通知渠道')),
                ('webhook', models.CharField(default=None, max_length=255, null=True, verbose_name='webhook地址')),
                ('users', models.ManyToManyField(default=None, related_name='ug_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='故障记录名称')),
                ('classification', models.CharField(max_length=255, verbose_name='')),
                ('level', models.CharField(max_length=255, verbose_name='级别')),
                ('state', models.IntegerField(default=0, verbose_name='状态')),
                ('start', models.IntegerField(verbose_name='开始时间')),
                ('end', models.IntegerField(default=None, null=True, verbose_name='结束时间')),
                ('duration', models.IntegerField(default=None, null=True, verbose_name='耗时')),
                ('reason', models.TextField(default=None, null=True, verbose_name='原因')),
                ('result', models.TextField(default=None, null=True, verbose_name='处理结果')),
                ('users', models.TextField(blank=True, default='', verbose_name='用户')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('match', models.TextField(default='{}', verbose_name='匹配规则')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=50, verbose_name='超时时间')),
                ('auto', models.IntegerField(default=0, verbose_name='是否自动')),
                ('group', models.CharField(default=None, max_length=255, null=True, verbose_name='分组')),
                ('mode', models.IntegerField(default=0, verbose_name='任务模式')),
                ('url', models.CharField(default=None, max_length=255, null=True, verbose_name='URL')),
                ('label', models.TextField(default='[]', verbose_name='标签')),
                ('instance_type', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='it_tasks', to='dmonitor.instancetype', verbose_name='实例类型')),
                ('instances', models.ManyToManyField(blank=True, to='dmonitor.Instance', verbose_name='实例列表')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='p_tasks', to='dcmdb.product', verbose_name='关联产品')),
                ('server_group', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sg_tasks', to='dmonitor.servergroup', verbose_name='采集组')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SLS',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('project_name', models.CharField(max_length=255, verbose_name='SLS名称')),
                ('desc', models.CharField(max_length=255, verbose_name='描述')),
                ('logsearch', models.CharField(max_length=255, verbose_name='日志库名称')),
                ('hide', models.BooleanField(default=False, verbose_name='隐藏侧边栏')),
                ('factory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.factory', verbose_name='厂商')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Silence',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('match', models.TextField(null=True, verbose_name='匹配规则')),
                ('start', models.IntegerField(default=0, verbose_name='开始时间')),
                ('end', models.IntegerField(default=0, verbose_name='结束时间')),
                ('duration', models.IntegerField(default=0, verbose_name='耗时')),
                ('unit', models.CharField(default='s', max_length=255, verbose_name='时间单位')),
                ('state', models.IntegerField(default=1, verbose_name='状态')),
                ('describe', models.TextField(null=True, verbose_name='描述')),
                ('source', models.IntegerField(default=0, verbose_name='来源')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='维护人')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('desc', models.TextField(default=None, null=True, verbose_name='描述')),
                ('code', models.CharField(max_length=255, verbose_name='服务唯一标识')),
                ('uuid', models.CharField(blank=True, max_length=255, verbose_name='唯一ID')),
                ('ipaddr', models.CharField(max_length=255, verbose_name='IP地址')),
                ('server_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.servergroup', verbose_name='服务器组')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProbeTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='探测任务名称')),
                ('mode', models.CharField(max_length=36, verbose_name='探测类型')),
                ('group', models.CharField(max_length=255, null=True, verbose_name='探测任务分组')),
                ('interval', models.IntegerField(default=60, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=30, verbose_name='超时时间')),
                ('target', models.CharField(max_length=255, verbose_name='目标')),
                ('label', models.TextField(blank=True, default='[]', verbose_name='标签')),
                ('probe', models.ManyToManyField(to='dmonitor.Probe', verbose_name='探测')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='probe',
            name='server_group',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.servergroup', verbose_name='关联采集组'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='消息名称')),
                ('instance_name', models.CharField(default='-', max_length=255, verbose_name='实例名称')),
                ('ipaddr', models.CharField(max_length=255, null=True, verbose_name='IP地址')),
                ('endpoint', models.CharField(max_length=255, verbose_name='端点')),
                ('level', models.CharField(max_length=255, verbose_name='级别')),
                ('state', models.CharField(max_length=255, verbose_name='状态')),
                ('summary', models.TextField(blank=True, default='', verbose_name='概括')),
                ('description', models.TextField(blank=True, default='', verbose_name='描述')),
                ('time', models.IntegerField(verbose_name='发生时间')),
                ('merge_num', models.IntegerField(default=None, verbose_name='聚合数量')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
                ('users', models.ManyToManyField(blank=True, related_name='msg_users', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabelName',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='标签名称')),
                ('mode', models.IntegerField(default=1, verbose_name='标签类型')),
                ('product', models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='instance',
            name='instance_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.instancetype', verbose_name='实例类型'),
        ),
        migrations.AddField(
            model_name='instance',
            name='labels',
            field=models.ManyToManyField(blank=True, related_name='ins_labels', to='dmonitor.Label', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='instance',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品'),
        ),
        migrations.AddField(
            model_name='instance',
            name='server_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.servergroup', verbose_name='关联监控采集组'),
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('mode', models.IntegerField(default=1, verbose_name='分组类型')),
                ('policy', models.TextField(blank=True, null=True, verbose_name='分组策略')),
                ('instance_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='it_groups', to='dmonitor.instancetype', verbose_name='实例类型')),
                ('instances', models.ManyToManyField(blank=True, related_name='ins_groups', to='dmonitor.Instance', verbose_name='实例')),
                ('labels', models.ManyToManyField(blank=True, to='dmonitor.Label', verbose_name='标签')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='p_groups', to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='Dashboard名称')),
                ('url', models.TextField(verbose_name='URL地址')),
                ('describe', models.TextField(default=None, null=True, verbose_name='描述')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentAlert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='当前告警名称')),
                ('fingerprint', models.CharField(default=None, max_length=255, null=True, verbose_name='指纹')),
                ('job', models.CharField(default=None, max_length=255, null=True, verbose_name='Job')),
                ('instance_type', models.CharField(default=None, max_length=255, null=True, verbose_name='实例类型')),
                ('instance_name', models.CharField(default=None, max_length=255, null=True, verbose_name='实例名称')),
                ('ipaddr', models.CharField(default=None, max_length=255, null=True, verbose_name='IP地址')),
                ('endpoint', models.CharField(max_length=255, verbose_name='端点')),
                ('level', models.CharField(max_length=36, verbose_name='级别')),
                ('state', models.CharField(max_length=36, verbose_name='状态')),
                ('receivers', models.CharField(default=None, max_length=255, null=True, verbose_name='接收人')),
                ('labels', models.TextField(default=None, null=True, verbose_name='标签')),
                ('graph', models.TextField(default=None, null=True, verbose_name='图')),
                ('summary', models.TextField(verbose_name='概括')),
                ('description', models.TextField(default=None, null=True, verbose_name='描述')),
                ('start', models.IntegerField(verbose_name='开始时间')),
                ('update', models.IntegerField(verbose_name='更新时间')),
                ('value', models.FloatField(verbose_name='值')),
                ('checked', models.IntegerField(default=0, verbose_name='')),
                ('deleted', models.IntegerField(default=0, verbose_name='是否删除')),
                ('deleted_ts', models.IntegerField(default=0, verbose_name='删除时间')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
                ('silence', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.silence', verbose_name='静默维护')),
                ('ticket', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.ticket', verbose_name='故障记录')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Callback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('types', models.IntegerField(default=1, verbose_name='回调类型')),
                ('robot', models.CharField(max_length=255, verbose_name='机器人')),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcmdb.factory', verbose_name='关联云厂商')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dcmdb.product', verbose_name='关联产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='告警规则名称')),
                ('level', models.CharField(max_length=255, verbose_name='告警级别')),
                ('interval', models.IntegerField(verbose_name='间隔')),
                ('expression', models.TextField(verbose_name='promql 表达式')),
                ('op', models.CharField(default='', max_length=255, verbose_name='操作符')),
                ('value', models.IntegerField(default=0, verbose_name='阈值')),
                ('summary', models.TextField(blank=True, default='', verbose_name='告警消息')),
                ('mode', models.IntegerField(default=0, verbose_name='模式')),
                ('description', models.TextField(blank=True, default='', verbose_name='描述')),
                ('alert_rule_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dmonitor.alertruletype', verbose_name='规则类型')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AlertRoute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(default='默认路由', max_length=255, verbose_name='路由名称')),
                ('group_by', models.TextField(default='["_product_id", "alertname", "level"]', verbose_name='通过...')),
                ('group_wait', models.IntegerField(default=60, verbose_name='通过...等待')),
                ('group_interval', models.IntegerField(default=60, verbose_name='通过...间隔')),
                ('repeat_interval', models.IntegerField(default=3600, verbose_name='重复...间隔')),
                ('match', models.TextField(default='[]', verbose_name='匹配')),
                ('parent', models.IntegerField(default=0, verbose_name='父路由')),
                ('is_raise', models.IntegerField(default=0, verbose_name='是否通知父亲')),
                ('product', models.ForeignKey(default=-1, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
                ('receiver', models.ManyToManyField(related_name='alert_route_receivers', to='dmonitor.UserGroup', verbose_name='接收者')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='告警名称')),
                ('instance_type', models.CharField(max_length=255, null=True, verbose_name='实例类型')),
                ('instance_name', models.CharField(default='-', max_length=255, verbose_name='实例名称')),
                ('ipaddr', models.CharField(max_length=255, null=True, verbose_name='IP地址')),
                ('endpoint', models.CharField(max_length=255, verbose_name='端点')),
                ('level', models.CharField(max_length=255, verbose_name='级别')),
                ('state', models.CharField(max_length=255, verbose_name='状态')),
                ('labels', models.TextField(null=True, verbose_name='标签')),
                ('graph', models.TextField(null=True, verbose_name='图')),
                ('summary', models.TextField(blank=True, default='', verbose_name='消息')),
                ('description', models.TextField(blank=True, default='', verbose_name='描述')),
                ('start', models.IntegerField(default=0, verbose_name='开始时间')),
                ('end', models.IntegerField(default=0, verbose_name='结束时间')),
                ('receivers', models.TextField(null=True, verbose_name='接收人')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdJust',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('match', models.TextField(default='[]', verbose_name='匹配规则')),
                ('op', models.CharField(default='', max_length=255, verbose_name='表达式')),
                ('value', models.IntegerField(default=0, verbose_name='值')),
                ('is_cover', models.IntegerField(default=1, verbose_name='是否覆盖')),
                ('level', models.CharField(max_length=255, verbose_name='级别')),
                ('parent', models.IntegerField(default=1, verbose_name='父子规则')),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ar_children', to='dmonitor.alertrule', verbose_name='告警规则')),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='dcmdb.product', verbose_name='产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AddOn',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('scheme', models.CharField(default='http', max_length=32, verbose_name='scheme')),
                ('style', models.CharField(default='machine', max_length=255, verbose_name='类型')),
                ('module', models.CharField(default='port', max_length=255, verbose_name='模块')),
                ('port', models.IntegerField(default=None, null=True, verbose_name='端口')),
                ('probe_args', models.TextField(blank=True, null=True, verbose_name='探测参数')),
                ('args', models.TextField(blank=True, null=True, verbose_name='参数')),
                ('interval', models.IntegerField(default=None, verbose_name='间隔时间')),
                ('timeout', models.IntegerField(default=None, verbose_name='超时时间')),
                ('relabel', models.TextField(default=None, null=True, verbose_name='标签')),
                ('probe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='probe_addons', to='dmonitor.probe', verbose_name='探测')),
                ('server_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sg_addons', to='dmonitor.servergroup', verbose_name='采集组')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_addons', to='dmonitor.task', verbose_name='任务')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdCident',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='创建时间')),
                ('update_at', models.IntegerField(default=dmonitor.models.base.now_ts, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='事故名称')),
                ('start_time', models.IntegerField(default=0, verbose_name='发生时间')),
                ('recover_time', models.IntegerField(default=0, verbose_name='恢复时间')),
                ('duration', models.IntegerField(default=0, verbose_name='耗时')),
                ('status', models.IntegerField(default=0, verbose_name='事故状态')),
                ('scope', models.TextField(blank=True, verbose_name='事故影响范围')),
                ('level', models.IntegerField(default=0, verbose_name='事故等级')),
                ('reason', models.TextField(blank=True, verbose_name='事故原因')),
                ('solution', models.TextField(blank=True, verbose_name='解决方式')),
                ('process', models.TextField(blank=True, default='[]', verbose_name='处理过程')),
                ('plan', models.TextField(blank=True, default='[]', verbose_name='后续规避方案')),
                ('people', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='负责人')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
